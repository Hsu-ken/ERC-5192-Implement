{
  "contractName": "testSwichType",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Locked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Unlocked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "locked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "test1",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Unlocked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test1\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"locked(uint256)\":{\"details\":\"SBTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"tokenId\":\"The identifier for an SBT.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Locked(uint256)\":{\"notice\":\"Emitted when the locking status is changed to locked.\"},\"Unlocked(uint256)\":{\"notice\":\"Emitted when the locking status is changed to unlocked.\"}},\"kind\":\"user\",\"methods\":{\"locked(uint256)\":{\"notice\":\"Returns the locking status of an Soulbound Token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/dataTypeSwitch.sol\":\"testSwichType\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/ERC5192.sol\":{\"keccak256\":\"0x01a1781d5cc0069b51cd2dc2a4559e2e952da56c2e6111dc2eb323097a58e50f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b38d3fb88e87e7b5bc2c9044eec450991d15944bf5315cf6524f0966f04b705\",\"dweb:/ipfs/QmXQyGkKar7Ygb2S5jyC3Gqw2hZk6qESonAUoPJhpkiMx3\"]},\"project:/contracts/IERC5192.sol\":{\"keccak256\":\"0x5a17ada75ebe5033cde034921a7ed7225754e1dc7336793da1c7f718ba60d558\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://fce71cbbea282ce9b3749b6979066c667de1b9388d9294479ff7ad6337e3ee44\",\"dweb:/ipfs/QmVBo2BYnnGq5EY38v2qwxoZTU7fJvwLwkB2fPXsrnbrVB\"]},\"project:/contracts/dataTypeSwitch.sol\":{\"keccak256\":\"0x3d1875508b5e6ead32c3ce10982d52509f9bedfb39c95fc39f50a193cc80ba76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e0cd978f4ab557c642018f24a21557d1664526d88a2ec3e3222df52b744702\",\"dweb:/ipfs/QmbKQJvWEimUpNmPDwBFx1XtTap54kwAzcRdqpeeoZteaK\"]}},\"version\":1}",
  "bytecode": "0x608060405260016000806101000a81548160ff02191690831515021790555034801561002a57600080fd5b506103578061003a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a7146100465780636b59084d14610076578063b45a3c0e14610094575b600080fd5b610060600480360381019061005b9190610231565b6100c4565b60405161006d9190610279565b60405180910390f35b61007e610196565b60405161008b91906102a3565b60405180910390f35b6100ae60048036038101906100a991906102f4565b6101be565b6040516100bb9190610279565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061018f57507fb45a3c0e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2905090565b6000808054906101000a900460ff169050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61020e816101d9565b811461021957600080fd5b50565b60008135905061022b81610205565b92915050565b600060208284031215610247576102466101d4565b5b60006102558482850161021c565b91505092915050565b60008115159050919050565b6102738161025e565b82525050565b600060208201905061028e600083018461026a565b92915050565b61029d816101d9565b82525050565b60006020820190506102b86000830184610294565b92915050565b6000819050919050565b6102d1816102be565b81146102dc57600080fd5b50565b6000813590506102ee816102c8565b92915050565b60006020828403121561030a576103096101d4565b5b6000610318848285016102df565b9150509291505056fea264697066735822122080f3416e11bdc8ea6b48d19c723563570d967fd0fa13345d1fdd80c70f00eb2764736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a7146100465780636b59084d14610076578063b45a3c0e14610094575b600080fd5b610060600480360381019061005b9190610231565b6100c4565b60405161006d9190610279565b60405180910390f35b61007e610196565b60405161008b91906102a3565b60405180910390f35b6100ae60048036038101906100a991906102f4565b6101be565b6040516100bb9190610279565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061018f57507fb45a3c0e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2905090565b6000808054906101000a900460ff169050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61020e816101d9565b811461021957600080fd5b50565b60008135905061022b81610205565b92915050565b600060208284031215610247576102466101d4565b5b60006102558482850161021c565b91505092915050565b60008115159050919050565b6102738161025e565b82525050565b600060208201905061028e600083018461026a565b92915050565b61029d816101d9565b82525050565b60006020820190506102b86000830184610294565b92915050565b6000819050919050565b6102d1816102be565b81146102dc57600080fd5b50565b6000813590506102ee816102c8565b92915050565b60006020828403121561030a576103096101d4565b5b6000610318848285016102df565b9150509291505056fea264697066735822122080f3416e11bdc8ea6b48d19c723563570d967fd0fa13345d1fdd80c70f00eb2764736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2551:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:6",
                "type": ""
              }
            ],
            "src": "7:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "378:105:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "388:89:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "403:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "410:66:6",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "399:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "399:78:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "388:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "360:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "370:7:6",
                "type": ""
              }
            ],
            "src": "334:149:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "531:78:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "587:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "596:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "599:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "589:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "589:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "589:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "554:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "578:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "561:16:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "561:23:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "551:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "551:34:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "544:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:42:6"
                  },
                  "nodeType": "YulIf",
                  "src": "541:62:6"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "524:5:6",
                "type": ""
              }
            ],
            "src": "489:120:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "666:86:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "676:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "698:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "685:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "685:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "676:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "740:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "714:25:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "714:32:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "714:32:6"
                }
              ]
            },
            "name": "abi_decode_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "644:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "652:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "660:5:6",
                "type": ""
              }
            ],
            "src": "615:137:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "823:262:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "871:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "844:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "853:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "840:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "840:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "865:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "836:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "836:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "833:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "962:116:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "977:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "991:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "981:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1006:62:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1040:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1051:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1036:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1036:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1060:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "1016:19:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1016:52:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1006:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "793:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "804:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "816:6:6",
                "type": ""
              }
            ],
            "src": "758:327:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1133:48:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1143:32:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1168:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1161:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1154:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1154:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1143:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1115:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1125:7:6",
                "type": ""
              }
            ],
            "src": "1091:90:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1246:50:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1263:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1283:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1268:14:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1256:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1256:34:6"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1234:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1241:3:6",
                "type": ""
              }
            ],
            "src": "1187:109:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1394:118:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1404:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1416:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1427:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1412:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1412:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1404:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1478:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1491:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1502:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1487:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1487:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1440:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1440:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1440:65:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1366:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1378:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1389:4:6",
                "type": ""
              }
            ],
            "src": "1302:210:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1581:52:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1598:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1620:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "1603:16:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1603:23:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1591:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1591:36:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1591:36:6"
                }
              ]
            },
            "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1569:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1576:3:6",
                "type": ""
              }
            ],
            "src": "1518:115:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1735:122:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1745:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1757:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1768:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1753:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1753:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1745:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1823:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1836:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1847:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1832:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1832:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1781:41:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1781:69:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1781:69:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1707:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1719:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1730:4:6",
                "type": ""
              }
            ],
            "src": "1639:218:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1908:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1918:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1929:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1918:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1890:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1900:7:6",
                "type": ""
              }
            ],
            "src": "1863:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1989:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2046:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2055:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2058:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2048:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2048:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2048:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2012:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2037:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2019:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2019:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2009:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2009:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2002:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2002:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1999:63:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1982:5:6",
                "type": ""
              }
            ],
            "src": "1946:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2126:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2136:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2158:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2145:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2145:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2136:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2201:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2174:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2174:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2174:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2104:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2112:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2120:5:6",
                "type": ""
              }
            ],
            "src": "2074:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2285:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2331:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2333:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2333:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2333:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2306:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2315:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2302:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2302:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2327:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2298:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2298:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2295:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2424:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2439:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2453:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2443:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2468:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2503:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2514:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2499:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2499:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2523:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2478:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2478:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2468:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2255:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2266:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2278:6:6",
                "type": ""
              }
            ],
            "src": "2219:329:6"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "150:164:5:-:0;;;206:4:2;194:16;;;;;;;;;;;;;;;;;;;;150:164:5;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "150:164:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;215:183:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;195:112:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;402:111:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;215:183;285:4;321:25;306:40;;;:11;:40;;;;:85;;;;365:26;350:41;;;:11;:41;;;;306:85;298:94;;215:183;;;:::o;195:112:5:-;232:6;261:38;246:55;;195:112;:::o;402:111:2:-;459:4;503;;;;;;;;;;496:11;;402:111;;;:::o;88:117:6:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:115::-;1603:23;1620:5;1603:23;:::i;:::-;1598:3;1591:36;1518:115;;:::o;1639:218::-;1730:4;1768:2;1757:9;1753:18;1745:26;;1781:69;1847:1;1836:9;1832:17;1823:6;1781:69;:::i;:::-;1639:218;;;;:::o;1863:77::-;1900:7;1929:5;1918:16;;1863:77;;;:::o;1946:122::-;2019:24;2037:5;2019:24;:::i;:::-;2012:5;2009:35;1999:63;;2058:1;2055;2048:12;1999:63;1946:122;:::o;2074:139::-;2120:5;2158:6;2145:20;2136:29;;2174:33;2201:5;2174:33;:::i;:::-;2074:139;;;;:::o;2219:329::-;2278:6;2327:2;2315:9;2306:7;2302:23;2298:32;2295:119;;;2333:79;;:::i;:::-;2295:119;2453:1;2478:53;2523:7;2514:6;2503:9;2499:22;2478:53;:::i;:::-;2468:63;;2424:117;2219:329;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity <=9.0.0;\r\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\r\nimport \"./ERC5192.sol\";\r\ncontract testSwichType is ERC5192 {\r\n  \r\n\r\n  function test1() pure public returns(bytes4){\r\n    return (bytes4(keccak256('supportsInterface(bytes4)')));\r\n  }\r\n  \r\n}",
  "sourcePath": "D:\\NFT\\soliditytest\\contracts\\dataTypeSwitch.sol",
  "ast": {
    "absolutePath": "project:/contracts/dataTypeSwitch.sol",
    "exportedSymbols": {
      "ERC165": [
        23
      ],
      "ERC5192": [
        84
      ],
      "IERC165": [
        35
      ],
      "IERC5192": [
        105
      ],
      "testSwichType": [
        159
      ]
    },
    "id": 160,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 140,
        "literals": [
          "solidity",
          "<=",
          "9.0",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "id": 141,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 160,
        "sourceUnit": 24,
        "src": "59:64:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC5192.sol",
        "file": "./ERC5192.sol",
        "id": 142,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 160,
        "sourceUnit": 85,
        "src": "125:23:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 143,
              "name": "ERC5192",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 84,
              "src": "176:7:5"
            },
            "id": 144,
            "nodeType": "InheritanceSpecifier",
            "src": "176:7:5"
          }
        ],
        "canonicalName": "testSwichType",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 159,
        "linearizedBaseContracts": [
          159,
          84,
          35,
          105
        ],
        "name": "testSwichType",
        "nameLocation": "159:13:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "239:68:5",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "737570706f727473496e746572666163652862797465733429",
                                "id": 152,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "271:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2",
                                  "typeString": "literal_string \"supportsInterface(bytes4)\""
                                },
                                "value": "supportsInterface(bytes4)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2",
                                  "typeString": "literal_string \"supportsInterface(bytes4)\""
                                }
                              ],
                              "id": 151,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967288,
                              "src": "261:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "261:38:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "254:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": {
                            "id": 149,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "254:6:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "254:46:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "id": 155,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "253:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 148,
                  "id": 156,
                  "nodeType": "Return",
                  "src": "246:55:5"
                }
              ]
            },
            "functionSelector": "6b59084d",
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test1",
            "nameLocation": "204:5:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "209:2:5"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "232:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "232:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "231:8:5"
            },
            "scope": 159,
            "src": "195:112:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 160,
        "src": "150:164:5",
        "usedErrors": []
      }
    ],
    "src": "33:281:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x77809d91E555CE80Cd0092158Ae42699E0CCFC1B",
      "transactionHash": "0x5d8cd0e1523f6c8c64f28073bbca090243b696248740b4e737e6e08c07f3ade7"
    }
  },
  "schemaVersion": "3.4.8",
  "updatedAt": "2023-02-27T13:09:01.278Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "locked(uint256)": {
        "details": "SBTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "tokenId": "The identifier for an SBT."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "Locked(uint256)": {
        "notice": "Emitted when the locking status is changed to locked."
      },
      "Unlocked(uint256)": {
        "notice": "Emitted when the locking status is changed to unlocked."
      }
    },
    "kind": "user",
    "methods": {
      "locked(uint256)": {
        "notice": "Returns the locking status of an Soulbound Token"
      }
    },
    "version": 1
  }
}